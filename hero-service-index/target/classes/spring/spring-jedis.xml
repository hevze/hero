<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xmlns:p="http://www.springframework.org/schema/p"
       xmlns:context="http://www.springframework.org/schema/context"
       xmlns:aop="http://www.springframework.org/schema/aop"
       xmlns:cache="http://www.springframework.org/schema/cache"
       xmlns:tx="http://www.springframework.org/schema/tx"
       xsi:schemaLocation="http://www.springframework.org/schema/beans
           http://www.springframework.org/schema/beans/spring-beans-3.2.xsd  
           http://www.springframework.org/schema/aop   
           http://www.springframework.org/schema/aop/spring-aop-3.2.xsd  
           http://www.springframework.org/schema/tx  
           http://www.springframework.org/schema/tx/spring-tx-3.2.xsd 
            http://www.springframework.org/schema/cache 
            http://www.springframework.org/schema/cache/spring-cache.xsd 
           http://www.springframework.org/schema/context  
           http://www.springframework.org/schema/context/spring-context-3.2.xsd"
       default-autowire="byName" default-lazy-init="false">


    <bean id="jedisPoolConfig" class="redis.clients.jedis.JedisPoolConfig">
        <property name="testWhileIdle" value="true"/>
        <property name="minEvictableIdleTimeMillis" value="60000"/>
        <property name="timeBetweenEvictionRunsMillis" value="30000"/>
        <property name="numTestsPerEvictionRun" value="-1"/>
        <property name="maxTotal" value="8"/>
        <property name="maxIdle" value="8"/>
        <property name="minIdle" value="0"/>
    </bean>

    <!--<bean id="jedisSentinelPool" class="redis.clients.jedis.JedisSentinelPool" destroy-method="destroy">
        <constructor-arg name="masterName">
            <value>master</value>
        </constructor-arg>
        <constructor-arg name="sentinels">
            <set value-type="java.lang.String">
                <value>${redis.host1}</value>
            </set>
        </constructor-arg>
        <constructor-arg name="poolConfig" ref="jedisPoolConfig" />
    </bean>


    <bean id="redisUtils" class="wusc.edu.pay.common.utils.cache.redis.RedisUtils">
        <property name="jedisSentinelPool" value="jedisSentinelPool" />
    </bean>-->
    <bean id="shardedJedisPool" class="redis.clients.jedis.ShardedJedisPool" scope="singleton">
        <constructor-arg index="0" ref="jedisPoolConfig"/>
        <constructor-arg index="1">
            <list>
                <bean class="redis.clients.jedis.JedisShardInfo">
                    <constructor-arg name="host" value="${redis.host}"/>
                    <constructor-arg name="port" value="${redis.port}"/>
                    <constructor-arg name="timeout" value="3000"/>
                    <constructor-arg name="weight" value="1"/>
                    <property name="password" value="${redis.password}"/>
                </bean>
            </list>
        </constructor-arg>
    </bean>
    <!-- redis caceh config end -->

    <bean id="redisUtils" class="com.hero.common.cache.RedisClientTemplate"/>

    <!-- generic cache manager -->
    <cache:annotation-driven/>
    <!-- generic cache manager -->
    <bean id="cacheManager" class="com.hero.common.cache.CacheManager">
        <property name="caches">
            <set>
                <bean
                        class="com.hero.common.cache.RedisCache"
                        p:name="redisCache"/>
            </set>
        </property>
    </bean>


</beans>